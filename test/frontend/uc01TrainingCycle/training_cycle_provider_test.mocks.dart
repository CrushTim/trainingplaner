// Mocks generated by Mockito 5.4.4 from annotations
// in trainingplaner/test/frontend/uc01TrainingCycle/training_cycle_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:trainingplaner/backend/dataClasses/training_cycle_data.dart'
    as _i2;
import 'package:trainingplaner/business/businessClasses/training_cycle_bus.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDateTime_0 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTrainingCycleData_1 extends _i1.SmartFake
    implements _i2.TrainingCycleData {
  _FakeTrainingCycleData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TrainingCycleBus].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrainingCycleBus extends _i1.Mock implements _i3.TrainingCycleBus {
  @override
  String get trainingCycleID => (super.noSuchMethod(
        Invocation.getter(#trainingCycleID),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#trainingCycleID),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#trainingCycleID),
        ),
      ) as String);

  @override
  set trainingCycleID(String? _trainingCycleID) => super.noSuchMethod(
        Invocation.setter(
          #trainingCycleID,
          _trainingCycleID,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get cycleName => (super.noSuchMethod(
        Invocation.getter(#cycleName),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#cycleName),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#cycleName),
        ),
      ) as String);

  @override
  set cycleName(String? _cycleName) => super.noSuchMethod(
        Invocation.setter(
          #cycleName,
          _cycleName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get description => (super.noSuchMethod(
        Invocation.getter(#description),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#description),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#description),
        ),
      ) as String);

  @override
  set description(String? _description) => super.noSuchMethod(
        Invocation.setter(
          #description,
          _description,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get emphasis => (super.noSuchMethod(
        Invocation.getter(#emphasis),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  set emphasis(List<String>? _emphasis) => super.noSuchMethod(
        Invocation.setter(
          #emphasis,
          _emphasis,
        ),
        returnValueForMissingStub: null,
      );

  @override
  DateTime get beginDate => (super.noSuchMethod(
        Invocation.getter(#beginDate),
        returnValue: _FakeDateTime_0(
          this,
          Invocation.getter(#beginDate),
        ),
        returnValueForMissingStub: _FakeDateTime_0(
          this,
          Invocation.getter(#beginDate),
        ),
      ) as DateTime);

  @override
  set beginDate(DateTime? _beginDate) => super.noSuchMethod(
        Invocation.setter(
          #beginDate,
          _beginDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  DateTime get endDate => (super.noSuchMethod(
        Invocation.getter(#endDate),
        returnValue: _FakeDateTime_0(
          this,
          Invocation.getter(#endDate),
        ),
        returnValueForMissingStub: _FakeDateTime_0(
          this,
          Invocation.getter(#endDate),
        ),
      ) as DateTime);

  @override
  set endDate(DateTime? _endDate) => super.noSuchMethod(
        Invocation.setter(
          #endDate,
          _endDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set parent(String? _parent) => super.noSuchMethod(
        Invocation.setter(
          #parent,
          _parent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.TrainingCycleData toData() => (super.noSuchMethod(
        Invocation.method(
          #toData,
          [],
        ),
        returnValue: _FakeTrainingCycleData_1(
          this,
          Invocation.method(
            #toData,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeTrainingCycleData_1(
          this,
          Invocation.method(
            #toData,
            [],
          ),
        ),
      ) as _i2.TrainingCycleData);

  @override
  void mapFromOtherInstance(_i3.TrainingCycleBus? otherInstance) =>
      super.noSuchMethod(
        Invocation.method(
          #mapFromOtherInstance,
          [otherInstance],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String getId() => (super.noSuchMethod(
        Invocation.method(
          #getId,
          [],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getId,
            [],
          ),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getId,
            [],
          ),
        ),
      ) as String);

  @override
  String getName() => (super.noSuchMethod(
        Invocation.method(
          #getName,
          [],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getName,
            [],
          ),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getName,
            [],
          ),
        ),
      ) as String);

  @override
  _i5.Future<String> add() => (super.noSuchMethod(
        Invocation.method(
          #add,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #add,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #add,
            [],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<void> update() => (super.noSuchMethod(
        Invocation.method(
          #update,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void validateForAdd() => super.noSuchMethod(
        Invocation.method(
          #validateForAdd,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void validateForUpdate() => super.noSuchMethod(
        Invocation.method(
          #validateForUpdate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void validateForDelete() => super.noSuchMethod(
        Invocation.method(
          #validateForDelete,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
